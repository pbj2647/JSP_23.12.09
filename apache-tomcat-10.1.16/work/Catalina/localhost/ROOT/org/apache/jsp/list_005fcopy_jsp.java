/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.16
 * Generated at: 2023-12-07 18:42:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class list_005fcopy_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<p>ãhtmlã</p>\r\n");
      out.write("\r\n");
      out.write("<p>ãheadã</p>\r\n");
      out.write("\r\n");
      out.write("<p>ãmeta http-equiv=content-type content=text/html; charset=UTF-8ã</p>\r\n");
      out.write("\r\n");
      out.write("<p>ãtitleãJSP ê²ìí - ê¸ëª©ë¡ë³´ê¸°ã/titleã</p>\r\n");
      out.write("\r\n");
      out.write("<p>ãSTYLE TYPE=text/cssã</p>\r\n");
      out.write("\r\n");
      out.write("<p>BODY,TD,SELECT,input,DIV,form,TEXTAREA,center,option,pre,i_blockquote {font-family:êµ´ë¦¼;font-size:9pt;color:#555555;}</p>\r\n");
      out.write("\r\n");
      out.write("<p>A:link &nbsp; &nbsp;{color:black;text-decoration:none;}</p>\r\n");
      out.write("\r\n");
      out.write("<p>A:visited {color:black;text-decoration:none;}</p>\r\n");
      out.write("\r\n");
      out.write("<p>A:active &nbsp;{color:black;text-decoration:none;}</p>\r\n");
      out.write("\r\n");
      out.write("<p>A:hover &nbsp; {color:gray; text-decoration:none;}</p>\r\n");
      out.write("\r\n");
      out.write("<p>ã/STYLEã</p>\r\n");
      out.write("\r\n");
      out.write("<p>ã/headã</p>\r\n");
      out.write("\r\n");
      out.write("<p>ãbody background=./images/body_bg.gifã</p>\r\n");
      out.write("\r\n");
      out.write("<p>ãimg src=./images/maintitle.gifã</p>\r\n");
      out.write("\r\n");
      out.write("<p>ãtable border=1 cellspacing=0 width=680 bordercolordark=white bordercolorlight=#999999ã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; ãtrã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ãtd width=30 bgcolor=#CCCCCCã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ãp align=centerãnoã/pã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ã/tdã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ãtd bgcolor=#CCCCCC width=490ã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ãp align=centerãsubjectã/pã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ã/tdã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ãtd width=60 bgcolor=#CCCCCCã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ãp align=centerãnameã/pã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ã/tdã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ãtd width=70 bgcolor=#CCCCCCã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ãp align=centerãdateã/pã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ã/tdã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ãtd width=30 bgcolor=#CCCCCCã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ãp align=centerãhitã/pã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ã/tdã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; ã/trã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; ãtrã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ãtd width=30ã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ãp align=centerã1ã/pã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ã/tdã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ãtd width=490ã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ì¬ê¸°ì ì ëª© ë¤ì´ê°</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ã/tdã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ãtd width=60ã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ãp align=centerãìë³ëª©ã/pã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ã/tdã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ãtd width=70ã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ãp align=centerã2003/03/31ã/pã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ã/tdã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ãtd width=30ã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ãp align=centerã5ã/pã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ã/tdã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; ã/trã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; ãtrã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ãtd width=100% colspan=5ã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ãp align=centerã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [ì²ì] [10ê° ì] [ì´ì ] [1] [2] [3] [4] [5] ãbããfont color=greenã6ã/fontãã/bã [7] [8] [9] [10] [ë¤ì] [10ê° ë¤] [ë§ì§ë§]</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ã/tdã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; ã/trã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; ãtrã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ãtd width=100% colspan=5ã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ãp align=centerããa href=&#39;write.html&#39;ã[ê¸ì°ê¸°]ã/aãã/pã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; &nbsp; &nbsp; ã/tdã</p>\r\n");
      out.write("\r\n");
      out.write("<p>&nbsp; &nbsp; ã/trã</p>\r\n");
      out.write("\r\n");
      out.write("<p>ã/tableã</p>\r\n");
      out.write("\r\n");
      out.write("<p>ã/bodyã</p>\r\n");
      out.write("\r\n");
      out.write("<p>ã/htmlã</p>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
